/* Import */
#include "../../lib/huffmate/src/data-structures/Hashmap.huff"

/* Interfaces */
#define function mintHorse() nonpayable returns()
#define function feedHorse(uint256) nonpayable
#define function isHappyHorse(uint256) view returns (bool)
#define function horseIdToFedTimeStamp(uint256) view returns(uint256)
#define function HORSE_HAPPY_IF_FED_WITHIN() view returns(uint256)

/* Storage */
#define constant HORSE_FED_TIMESTAMP_LOCATION = FREE_STORAGE_POINTER()

#define macro CONSTRUCTOR = takes(0) returns(0){
    
}


#define macro MAIN() = takes(0) returns(0){
    0x00 calldataload 
    0xe0 shr            //[function_selector]
    dup1 dup1 dup1 dup1                

    __FUNC_SIG(mintHorse) eq mintJump jumpi 
    __FUNC_SIG(feedHorse) eq feedJump jumpi
    __FUNC_SIG(isHappyHorse) eq happyJump jumpi
    __FUNC_SIG(horseIdToFedTimeStamp) eq fedTimeStamp jumpi
    __FUNC_SIG(HORSE_HAPPY_IF_FED_WITHIN) eq timeJump jumpi

    0x00 0x00 revert

    mintJump:
        MINT_HORSE()
    
    feedJump:
        FEED_HORSE()

    happyJump:
        IS_HAPPY_HORSE()
    
    fedTimeStamp:
        HORSE_ID_TO_FED_TIMESTAMP()

    timeJump:
        HORSE_HAPPY_IF_FED_WITHIN()

}

#define macro MINT_HORSE() = takes(0) returns(0){

}

#define macro FEED_HORSE() = takes(0) returns(0){
    timestamp 0x04 calldataload         //[horseId, timestamp]
    [HORSE_FED_TIMESTAMP_LOCATION]      //[HORSE_FED_TIMESTAMP_LOCATION, horseId, timestamp]
    STORE_ELEMENT_FROM_KEYS()
    stop
}